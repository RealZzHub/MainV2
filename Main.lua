-- This file was generated using Luraph Obfuscator v13.5.4

return(function(GK,dK,qK,kK,hK,RK,mK,SK,zK,oK,pK,tK,YK,vK,jK,JK,HK,sK,UK,eK,LK,cK,BK,xK,MK,...)local y,o,f=nil,nil,nil;do for xV=0x000,2 do if xV<=0 then y=RK;else if xV==1 then o=zK.yield;do continue;end;else f=JK;end;end;end;end;local P=(error);local nK,w,z,R,F,J,fK=0X0,nil,nil,nil,nil,nil,nil;local T=tonumber;do repeat do if not(nK<=0X002)then if not(nK<=3)then do if nK==0X4 then F=string.sub;nK=1;continue;else fK={};nK=0x6;do continue;end;end;end;else R=string.char;nK=0X4;end;elseif nK<=0X0000 then w=dK;nK=0X0002;continue;else if nK==0X1 then J=mK;nK=5;else z=jK;nK=3;end;end;end;until nK==6;end;local L=xK;local j=(BK);local m=setmetatable;local B,k=GK,(coroutine.wrap);nK=2;local d,s,S=nil,nil,(nil);while nK~=3 do if not(nK<=0)then if nK==1 then do s=1;end;nK=0X0000;do continue;end;else do d=kK;end;nK=0X1;end;else S=oK;nK=3;continue;end;end;local e,Q=getfenv,bit32.band;local H=e();nK=0;local X,c,h=nil,nil,(nil);do repeat if not(nK<=0x00001)then do if nK~=2 then nK=4;do continue;end;else do nK=1;end;continue;end;end;else if nK==0x0 then X={[0X0]=0X1};nK=0x0002;else cdo nK=3;end;end;end;until nK>0x3;end;nK=0X1;local v=nil;while nK<2 do if nK==0X0000 then v=function()local rU=w(c,s,s);s=s+1;return rU;end;do nK=2;end;else do c=J(F(c,5),'.\.',function(aU)do if w(aU,0X2)==0X0048 then h=T(F(aU,0X1,0X00001));return'';else local J_=nil;local y_=(0X0);do while y_~=2 do do if y_==0 then do J_=R(T(aU,0X10));end;do y_=0X1;end;else do if not(h)then return J_;else local LY=(nil);for BW=0,0X2 do do if BW<=0 then LY=z(J_,h);else do if BW~=1 then return LY;else do h=nil;end;continue;end;end;end;end;end;end;end;do y_=2;end;do continue;end;end;end;end;end;end;end;end);end;nK=0x000;continue;end;end;local O=type;nK=0X3;local I,Y,M,i,U=nil,nil,nil,nil,(nil);repeat do if nK<=1 then do if nK~=0X00 then do M=LK;end;nK=0X4;continue;else do U=2147483648;end;nK=5;end;end;elseif nK<=0x00002 then do Y=4294967296;end;nK=1;do continue;end;else if nK==3 then do I=bit32.bnot;end;do nK=2;end;else i=SK;nK=0X0;continue;end;end;end;until nK>4;local x,W=next,U-1;do local n0=(nil);do for Jo=0X0000,0X1 do if Jo~=0 then for WG=0x1,0X1f do local xG=(0X00000);while-723444400 do if xG==0 then do(X)[WG]=n0;end;do xG=1;end;continue;else do n0=n0*0X2;end;break;end;end;end;else n0=0X2;end;end;end;end;local q=function()local gl,Gl=S(MK,c,s);s=Gl;do return gl;end;end;local l,g,r=nil,nil,nil;for HR=0,0x2 do if HR<=0 then l=function()local Ui=(0X0);local ai,Hi=nil,nil;while true do if not(Ui<=0)then if Ui==0X00001 then return ai;else s=Hi;Ui=0X1;end;else ai,Hi=S("<i8",c,s);Ui=2;end;end;end;continue;else if HR==0x1 then do g=bit32.bxor;end;continue;else r=eK;continue;end;end;end;nK=1;local K,u=nil,(nil);do while nK<0X002 do do if nK==0X0 then do u=HK;end;nK=0X2;do continue;end;else do K=function()local jZ,pZ=nil,nil;for QU=0,2 do if not(QU<=0)then do if QU==0x0001 then s=pZ;else do return jZ;end;end;end;else jZ,pZ=S("<d",c,s);end;end;end;end;do nK=0X0;end;end;end;end;end;local G,t=rawget,(Y-0x1);local D=function()local Tt,tt=0x00000,(0);repeat local rl=w(c,s,s);s=s+1;Tt=r(Tt,u(Q(rl,0X7f),tt));if Q(rl,0X80)~=0 then else do return Tt;end;end;tt=tt+7;until false;end;local EK,p=nil,(nil);local E=tostring;for wO=0,0x1 do do if wO~=0 then p=0X2^52;else EK={};end;end;end;local N=(function()local cs=(0X0);local Ls=nil;while true do if cs==0X00 then Ls=D();cs=0X1;continue;else if not(Ls>W)then else return Ls-Y;end;break;end;end;do return Ls;end;end);local A=v();local C=(assert);local a=(function(ku,Ou,Zu)local Ku=(nil);do for AP=0X00,2 do do if not(AP<=0)then if AP~=0X1 then return Ku;else Ku=Ku-Ku%1;end;else do Ku=(ku/X[Ou])%X[Zu];end;end;end;end;end;end);local b=(v());do nK=0;end;local CK,Z,TK=nil,nil,nil;repeat do if nK<=0x0 then CK=function(ty)local ny,ly,Gy,by,Uy,Hy=0,nil,nil,nil,nil,(nil);while ny<6 do if not(ny<=0X2)then if ny<=0X3 then b=(0X0001d*b+ty)%sK;ny=6;continue;else if ny==4 then do by=g(ly[2],b);end;do ny=5;end;else Uy=g(ly[3],b);ny=1;end;end;elseif ny<=0 then do ly={w(c,s,s+0X3)};end;ny=2;else if ny~=1 then Gy=g(ly[1],b);ny=4;else Hy=g(ly[4],b);ny=3;end;end;end;ny=0X0;repeat if ny~=0x0 then do return Hy*0x1000000+Uy*65536+by*0X100+Gy;end;else do s=s+0x4;end;do ny=1;end;continue;end;until false;end;nK=2;do continue;end;else if nK~=0X1 then Z={3,5,2};do nK=0X1;end;continue;else TK=function(...)return y('\#',...),{...};end;do nK=3;end;end;end;end;until nK>=3;local V,OK={[3]=cK,[0X07]=0.3566453476239204,[0X7]=hK,[4]=0X3,[0X7]=vK,[7]=9,[7]=0X2,[0X2]=7,[0X6]=0X4,[3]=4,[0X1]=0X06,[5]=6},(0X1);do nK=0X01;end;local yK,PK,FK=nil,nil,nil;while nK<4 do if not(nK<=0X00001)then if nK~=0X2 then nK=2;else function PK(EL,TL,hL)local lL,JL=TL[4],(TL[8]);local dL=(TL[1]);local cL=(TL[0x6]);local PL=(TL[7]);local VL=TL[9];local oL=TL[3];local BL=m({},{__mode="v"});local KL,fL=TL[2],nil;do fL=function(...)local PV=0x1;local tV=e();local XV,dV=TK(...);local GV=(tV==H and EL or tV);XV=XV-0X0001;local HV=(0X00);local UV={};for iK=0,XV do if lL>iK then do(UV)[iK]=dV[iK+0X1];end;else break;end;end;do(EK)[4]=TL;end;EK[1]=UV;if not PL then do dV=nil;end;elseif VL then(UV)[lL]={n=XV>=lL and XV-lL+0X1 or 0,L(dV,lL+1,XV+1)};end;if GV~=tV then M(fL,GV);end;local IV,RV,kV,TV=f(function()do while true do local oM=cL[PV];local QM=(oM[1]);do PV=PV+1;end;do if QM<0x00002e then do if not(QM<0X17)then if QM>=34 then if not(QM>=40)then if QM>=37 then if not(QM>=38)then if oM[5]~=70 then repeat local Ui,li=BL,UV;if#Ui>0X00 then local R6={};for nF,HF in x,Ui do for Fo,po in x,HF do if po[1]==li and po[2]>=0X0 then local xS=(po[0X2]);do if not R6[xS]then R6[xS]={li[xS]};end;end;po[0X001]=R6[xS];(po)[0X00002]=1;end;end;end;end;until true;local J_=(oM[0X3]);return false,J_,J_;else PV=PV-0X1;(cL)[PV]={[0X1]=0X22,[0X2]=(oM[2]-0X82),[0X3]=(oM[3]-130)};end;else if QM~=39 then UV[oM[3]]=UV[oM[2]]>UV[oM[0X5]];else do if not(UV[oM[0X2]]<UV[oM[5]])then else PV=oM[0x03];end;end;end;end;else if QM>=35 then if QM~=36 then local ly=hL[oM[0X2]];do(UV)[oM[0X00003]]=ly[0X1][ly[0X2]];end;else repeat local lw,Lw=BL,UV;if not(#lw>0)then else local JM={};for KW,LW in x,lw do for qB,vB in x,LW do if not(vB[1]==Lw and vB[0X002]>=0X0000)then else local QF=(vB[0X002]);do if not(not JM[QF])then else do JM[QF]={Lw[QF]};end;end;end;do vB[0X1]=JM[QF];end;vB[2]=1;end;end;end;end;until true;local II=(oM[0X3]);return false,II,II+oM[0X002]-0x00002;end;else local O2,a2=oM[3],(XV-lL);if not(a2<0X000)then else a2=-0X0001;end;for cU=O2,O2+a2 do(UV)[cU]=dV[lL+(cU-O2)+1];end;HV=O2+a2;end;end;else if QM<43 then if QM>=41 then if QM==42 then(UV)[oM[0X3]]=UV[oM[2]]<UV[oM[0x05]];else(UV[oM[0X0003]])[oM[7]]=oM[0X0006];end;else do UV[oM[3]]=UV[oM[0x2]]/oM[0X0006];end;end;else if QM>=44 then if QM==0x00002D then local Fq=(oM[0X00003]);for LY=Fq,Fq+(oM[0X2]-0X01)do do UV[LY]=dV[lL+(LY-Fq)+1];end;end;else UV[oM[3]]=UV[oM[2]]^UV[oM[5]];end;else local WI=(oM[0X3]);local TI,UI=UV[WI]();if not(TI)then else PV=oM[2];UV[WI+0X3]=UI;end;end;end;end;else if not(QM>=0X00001c)then do if not(QM<25)then do if not(QM>=0x00001A)then if UV[oM[2]]==oM[6]then do PV=oM[0X3];end;end;else if QM==27 then local j5=(oM[0X3]);HV=j5+oM[0X0002]-0X1;UV[j5](L(UV,j5+0x1,HV));HV=j5-0X1;else do UV[oM[3]]=u(UV[oM[0X2]],UV[oM[5]]);end;end;end;end;else if QM~=0X000018 then UV[oM[0X3]]=not UV[oM[0x2]];else if UV[oM[0X2]]~=oM[0X6]then PV=oM[0x3];end;end;end;end;else if not(QM<31)then do if not(QM<0X20)then if QM~=0X21 then do if UV[oM[0X2]]<=UV[oM[5]]then do PV=oM[3];end;end;end;else local Qq=(oM[3]);local eq=k(function(...)o();for LN,BN in...do(o)(true,LN,BN);end;end);eq(UV[Qq],UV[Qq+0X1],UV[Qq+2]);HV=Qq;UV[Qq]=eq;do PV=oM[0X2];end;end;else repeat local c5,t5=BL,UV;if not(#c5>0x0000)then else local Sm={};do for nN,oN in x,c5 do for Us,Fs in x,oN do if not(Fs[1]==t5 and Fs[2]>=0X0)then else local rI=(Fs[2]);if not(not Sm[rI])then else Sm[rI]={t5[rI]};end;(Fs)[1]=Sm[rI];(Fs)[2]=1;end;end;end;end;end;until true;return true,oM[3],0X00001;end;end;else if not(QM>=0X00001d)then local gK=oM[0X3];local NK,QK=UV[gK+0X1],UV[gK+0X2];local bK=(UV[gK]);(UV)[gK]=k(function()for Kk=bK,NK,QK do(o)(true,Kk);end;end);PV=oM[0X2];else if QM~=0X001e then do(UV)[oM[3]]=g(UV[oM[0X002]],UV[oM[5]]);end;else(UV[oM[3]])[oM[7]]=UV[oM[0X5]];end;end;end;end;end;else if QM>=11 then if not(QM>=0X011)then if not(QM>=0X0e)then if not(QM>=12)then do repeat local zf,xf=BL,(UV);do if#zf>0 then local bM={};for yu,ou in x,zf do for qv,Tv in x,ou do if not(Tv[1]==xf and Tv[0X02]>=0)then else local c0=Tv[2];if not bM[c0]then(bM)[c0]={xf[c0]};end;do Tv[1]=bM[c0];end;Tv[2]=1;end;end;end;end;end;until true;end;return false,oM[3],HV;else if QM==13 then repeat local c5,f5=BL,(UV);do if#c5>0 then local Gc={};for y7,T7 in x,c5 do for mz,Oz in x,T7 do do if not(Oz[1]==f5 and Oz[0x2]>=0)then else local P8=(Oz[2]);if not(not Gc[P8])then else Gc[P8]={f5[P8]};end;(Oz)[1]=Gc[P8];do Oz[0x2]=0X001;end;end;end;end;end;end;end;until true;return;else(UV)[oM[3]]=UV[oM[2]]==UV[oM[0x5]];end;end;else if QM>=15 then if QM~=0X10 then local fi=(oM[2]);UV[oM[3]]=UV[fi]..UV[fi+1];else local RN=(oM[3]);local sN=(oM[0X2]);HV=RN+sN-1;do repeat local lm,mm=BL,UV;do if not(#lm>0)then else local IQ=({});for ZV,jV in x,lm do for PP,uP in x,jV do do if uP[1]==mm and uP[0X2]>=0X0 then local j7=uP[2];if not(not IQ[j7])then else IQ[j7]={mm[j7]};end;(uP)[0x001]=IQ[j7];(uP)[2]=1;end;end;end;end;end;end;until true;end;return true,RN,sN;end;else local nH=oM[0x3];UV[nH](L(UV,nH+0x0001,HV));do HV=nH-1;end;end;end;else do if not(QM>=0X14)then if not(QM>=0x12)then if UV[oM[0X2]]~=UV[oM[5]]then PV=oM[0x3];end;else do if QM==0X00013 then if oM[0X05]==0X000Ba then PV=PV-0X1;(cL)[PV]={[0x001]=11,[2]=(oM[0X2]-0X67),[3]=(oM[0X3]-103)};elseif oM[5]==76 then PV=PV-1;cL[PV]={[1]=0X46,[2]=(oM[2]-0X00004e),[0x0003]=(oM[0X3]-78)};elseif oM[0X00005]~=237 then for Eu=oM[0X3],oM[0X02]do UV[Eu]=nil;end;else PV=PV-1;do cL[PV]={[2]=(oM[0X2]-65),[0X3]=(oM[3]-65),[0X1]=0x024};end;end;else UV[oM[0X003]]=UV[oM[2]]>=UV[oM[0X005]];end;end;end;else do if QM<21 then local lC=(oM[3]);local vC,zC=UV[lC]();if vC then for BR=0X1,oM[0X5]do(UV)[lC+BR]=zC[BR];end;do PV=oM[0X02];end;end;else if QM==0X16 then if oM[0X05]~=0X00c5 then if not UV[oM[0X3]]then PV=oM[2];end;else PV=PV-1;cL[PV]={[3]=(oM[3]-125),[1]=0XB,[0x2]=(oM[2]-125)};end;else if not(not(UV[oM[2]]<=oM[0X6]))then else PV=oM[3];end;end;end;end;end;end;end;else if QM<0x05 then if QM>=2 then do if QM<3 then local yS=(oM[3]);HV=yS+oM[2]-1;do UV[yS]=UV[yS](L(UV,yS+1,HV));end;HV=yS;else if QM==0X04 then local Do=(oM[3]);local po=k(function(...)(o)();for TI in...do(o)(true,TI);end;end);(po)(UV[Do],UV[Do+0x1],UV[Do+0X2]);HV=Do;UV[Do]=po;PV=oM[0X2];else do UV[oM[3]]=UV[oM[0X2]]/UV[oM[5]];end;end;end;end;else do if QM==0X01 then local PA=(dL[oM[2]]);local xA,KA=PA[0X5],nil;local ZA=#xA;if ZA>0X0 then KA={};for kZ=0X1,ZA do local XZ=(xA[kZ]);if XZ[0x0001]~=0X0 then(KA)[kZ-1]=hL[XZ[0X002]];else KA[kZ-0X01]={UV,XZ[0X2]};end;end;(j)(BL,KA);end;(UV)[oM[3]]=PK(GV,PA,KA);else(UV)[oM[0X3]]=UV[oM[2]]+oM[6];end;end;end;else if QM>=8 then if not(QM>=0X09)then do(UV[oM[3]])[UV[oM[2]]]=UV[oM[0X00005]];end;else if QM~=0Xa then local TD=oM[0x0003];UV[TD](UV[TD+0x1]);HV=TD-0X1;else local Tb=(oM[0X0003]);local kb=((oM[5]-0X1)*50);local nb=UV[Tb];for UJ=1,HV-Tb do(nb)[kb+UJ]=UV[Tb+UJ];end;end;end;else do if QM>=6 then if QM==7 then if oM[0X0005]~=84 then repeat local gZ,dZ,TZ=BL,UV,(oM[0X3]);if not(#gZ>0X0)then else local zR=({});for PW,MW in x,gZ do for ux,Qx in x,MW do do if Qx[1]==dZ and Qx[2]>=TZ then local TC=Qx[2];if not(not zR[TC])then else(zR)[TC]={dZ[TC]};end;(Qx)[1]=zR[TC];Qx[0x2]=0X1;end;end;end;end;end;until true;else PV=PV-0X001;(cL)[PV]={[0X0003]=(oM[0X3]-0X0000CE),[2]=(oM[0x0002]-206),[1]=0X0000d};end;else local oO=oM[3];do UV[oO]=UV[oO](L(UV,oO+0x1,HV));end;HV=oO;end;else(UV)[oM[0X3]]=UV[oM[0X02]]~=oM[6];end;end;end;end;end;end;end;else do if QM<69 then if QM<57 then do if QM<0X000033 then if not(QM>=0X30)then if QM==0X2f then UV[oM[3]]=UV[oM[2]][oM[6]];else(UV)[oM[3]]=r(UV[oM[0X2]],UV[oM[5]]);end;else if QM<0X31 then(UV)[oM[3]]={};else if QM==50 then do(EK)[oM[2]]=UV[oM[3]];end;else(UV)[oM[0x003]]=I(UV[oM[0X2]]);end;end;end;else do if not(QM>=0X36)then if not(QM<52)then do if QM~=53 then(UV)[oM[0X0003]]=UV[oM[0x2]];else(UV)[oM[0X03]]=UV[oM[2]]-UV[oM[0X0005]];end;end;else UV[oM[3]]={L({},1,oM[0x2])};end;else if QM>=0X37 then do if QM==0x38 then UV[oM[0X3]]=UV[oM[0X0002]]<=UV[oM[0x5]];else UV[oM[3]]=UV[oM[0X2]]%oM[6];end;end;else UV[oM[0X00003]]=GV[oM[7]];end;end;end;end;end;else if not(QM>=63)then if not(QM>=0X3c)then if QM>=0X003A then do if QM==0x03B then local F6=hL[oM[0X0002]];F6[1][F6[0X2]]=UV[oM[0X3]];else(UV)[oM[3]]=true;end;end;else local qR=(oM[0x3]);local zR,iR=UV[qR]();do if not(zR)then else UV[qR+0x001]=iR;PV=oM[2];end;end;end;else do if QM>=61 then if QM~=62 then local sI=(oM[0X00003]);(UV[sI])(UV[sI+0X00001],UV[sI+0X002]);HV=sI-0X1;else local KB=oM[0x3];local cB,CB=UV[KB],((oM[0X5]-1)*0X32);for ZI=0X1,oM[2]do(cB)[CB+ZI]=UV[KB+ZI];end;end;else GV[oM[0X007]]=UV[oM[0X3]];end;end;end;else do if not(QM<0X000042)then if not(QM<0X43)then if QM~=68 then local tl=(oM[3]);UV[tl]=UV[tl](UV[tl+0x1],UV[tl+0X2]);HV=tl;else local hp=oM[3];(UV)[hp]=UV[hp](UV[hp+0X1]);do HV=hp;end;end;else local jO=(oM[3]);local YO,qO,oO=UV[jO]();do if not(YO)then else(UV)[jO+0x1]=qO;(UV)[jO+2]=oO;PV=oM[2];end;end;end;else if not(QM<0X0040)then if QM~=65 then do if not(not(UV[oM[2]]<=UV[oM[5]]))then else do PV=oM[3];end;end;end;else HV=oM[3];(UV)[HV]=UV[HV]();end;else if not(UV[oM[3]])then else PV=oM[0X2];end;end;end;end;end;end;else do if QM>=80 then if not(QM>=0x056)then if not(QM>=83)then if QM>=0X00051 then if QM~=0X52 then repeat local I6,V6=BL,(UV);if not(#I6>0)then else local kq=({});for cR,ER in x,I6 do for CF,xF in x,ER do if not(xF[0x001]==V6 and xF[2]>=0X0)then else local jV=(xF[0X00002]);if not(not kq[jV])then else kq[jV]={V6[jV]};end;(xF)[0X00001]=kq[jV];xF[0x2]=1;end;end;end;end;until true;do return true,oM[0x3],0X0;end;else do UV[oM[3]]=Q(UV[oM[0X00002]],UV[oM[5]]);end;end;else local CC=(UV[oM[0X00002]]/UV[oM[0X5]]);(UV)[oM[0x3]]=CC-CC%1;end;else if not(QM<84)then do if QM~=0X55 then UV[oM[3]]=UV[oM[2]]+UV[oM[5]];else local c4,n4=oM[0X3],(UV[oM[2]]);do(UV)[c4+0x01]=n4;end;UV[c4]=n4[oM[6]];end;end;else do UV[oM[3]]=oM[7];end;end;end;else if not(QM<89)then if QM<90 then do(UV[oM[3]])[UV[oM[0X2]]]=oM[6];end;else if QM==91 then do if oM[5]~=0X91 then(UV)[oM[0x03]]=nil;else do PV=PV-1;end;do(cL)[PV]={[0x2]=(oM[2]-0X0000bC),[1]=52,[3]=(oM[0X003]-0XBC)};end;end;end;else UV[oM[3]]=-UV[oM[0x00002]];end;end;else if QM>=87 then if QM~=88 then UV[oM[3]]=UV[oM[0X0002]]~=UV[oM[5]];else HV=oM[0X3];(UV[HV])();HV=HV-1;end;else UV[oM[0X003]]=UV[oM[2]]*UV[oM[5]];end;end;end;else do if not(QM>=0X4A)then do if QM>=0X47 then do if not(QM<0X000048)then if QM~=0X49 then do if UV[oM[2]]~=UV[oM[5]]then else PV=oM[3];end;end;else if not(UV[oM[2]]<UV[oM[5]])then do PV=oM[3];end;end;end;else(UV)[oM[3]]=UV[oM[0X00002]]%UV[oM[5]];end;end;else do if QM~=0x46 then local yn,nn=oM[3],oM[0X2];if nn==0 then else do HV=yn+nn-1;end;end;local pn,on,Tn=nil,nil,(oM[5]);if nn~=0X1 then pn,on=TK(UV[yn](L(UV,yn+1,HV)));else pn,on=TK(UV[yn]());end;if Tn==1 then do HV=yn-1;end;else if Tn~=0 then pn=yn+Tn-2;HV=pn+0x01;else pn=pn+yn-1;do HV=pn;end;end;local Lq=(0);do for XI=yn,pn do Lq=Lq+0X1;do UV[XI]=on[Lq];end;end;end;end;else if oM[5]==254 then PV=PV-1;(cL)[PV]={[2]=(oM[0X0002]-146),[1]=0xD,[3]=(oM[0X003]-146)};else UV[oM[0X3]]=#UV[oM[2]];end;end;end;end;end;else if not(QM>=0x4D)then do if QM<0X04b then UV[oM[0X3]]=UV[oM[2]][UV[oM[0X5]]];else do if QM==0x4C then do if oM[5]==0x00097 then do PV=PV-0X1;end;do cL[PV]={[2]=(oM[0X00002]-196),[1]=13,[3]=(oM[3]-196)};end;elseif oM[0X0005]==0XFf then do PV=PV-0x1;end;do(cL)[PV]={[3]=(oM[0X3]-0Xe5),[2]=(oM[0X2]-229),[0x1]=0X5a};end;else do UV[oM[3]]=dV[lL+1];end;end;end;else if not(not(oM[7]<=UV[oM[5]]))then else PV=oM[3];end;end;end;end;end;else if QM<0x04E then PV=oM[0x2];else do if QM~=0X4F then UV[oM[0X3]]=EK[oM[2]];else(UV)[oM[3]]=false;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end);do if not(IV)then do if O(RV)~='\s\116r\i\110\103'then P(RV,0);else do if not(d(RV,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if d(RV,"^.-:%d+: ")then P("Luraph Script:"..(oL[PV-0X1]or"(internal)").."\:\ "..E(RV),0X0);else P(RV,0);end;end;end;end;else do if RV then do if TV==1 then return UV[kV]();else do return UV[kV](L(UV,kV+0X1,HV));end;end;end;elseif kV then return L(UV,kV,TV);end;end;end;end;end;end;M(fL,EL);do return fL;end;end;nK=0X000;continue;end;elseif nK~=0 then yK=function(LJ)local YJ,VJ,jJ=0,nil,nil;do repeat if YJ==0x0 then VJ=q();do YJ=1;end;else jJ="";break;end;until(false);end;do for hP=0X1,VJ,0X0001f3D do local HP,TP=1,nil;do while HP~=2 do if HP~=0 then TP=hP+7997-1;HP=0;continue;else do if not(TP>VJ)then else TP=VJ;end;end;HP=2;end;end;end;local rP={w(c,s+hP-0X001,s+TP-1)};HP=0x1;while HP~=2 do if HP~=0 then for BA=0X1,#rP do for BO=0,0X0001 do if BO==0 then(rP)[BA]=g(rP[BA],A);continue;else A=(LJ*A+0X00001F)%256;end;end;end;do HP=0X0;end;continue;else jJ=jJ..R(L(rP));HP=2;continue;end;end;end;end;s=s+VJ;return jJ;end;nK=3;do continue;end;else function FK()local ob,kb,cb,Mb,wb,Yb,Fb,Qb=nil,nil,nil,nil,nil,nil,nil,(nil);do for OA=0X0,9 do if not(OA<=0X4)then if not(OA<=6)then if OA<=0X7 then Fb=v()~=0;else if OA==0x00008 then for Hi=0X001,cb do local fi=v();local Gi=nil;(ob)[Hi-1]=kb;local Wi,zi=2,nil;while Wi~=0x3 do if not(Wi<=0X00000)then if Wi~=0X001 then if fi==UK then Gi=q();elseif fi==0X2c then do Gi=K();end;elseif fi==0x09b then Gi=F(yK(wb),2);elseif fi==245 then do Gi=q();end;elseif fi==196 then Gi=K();elseif fi==0XDe then Gi=q();elseif fi==YK then Gi=vK;elseif fi==0x3E then Gi=l();elseif fi==106 then Gi=hK;elseif fi==192 then Gi=F(yK(wb),v());elseif fi~=130 then else Gi=F(yK(wb),pK);end;Wi=0;else(Yb)[kb]=zi;Wi=0X3;end;else zi={Gi,{}};Wi=1;continue;end;end;Wi=0;do repeat if Wi==0 then do kb=kb+1;end;Wi=1;do continue;end;else if not(Fb)then else for ov=0,1 do if ov==0X00000 then(fK)[OK]=zi;continue;else OK=OK+tK;do continue;end;end;end;end;Wi=2;end;until Wi>0X00001;end;end;else Qb=v();do continue;end;end;end;else do if OA~=5 then Yb={};continue;else wb=v();end;end;end;else if OA<=0X1 then if OA~=0x0 then ob={};else end;else if not(OA<=0X0002)then if OA~=0X3 then Mb={{},nil,{},nil,qK,{},nil,qK,qK};do continue;end;else do cb=q()-56255;end;do continue;end;end;else kb=1;end;end;end;end;end;for VW=0x00000,0X2 do if not(VW<=0)then do if VW==0X1 then(Mb)[9]=a(Qb,2,0X1)~=0;else(Mb)[0X0a]=q();end;end;else Mb[7]=a(Qb,1,1)~=0X0;continue;end;end;(Mb)[13]=q();do(Mb)[0Xd]=q();end;local Zb=(Mb[0x6]);local zb=(0x4);local Jb,Eb=nil,nil;while zb<=4 do if not(zb<=1)then if zb<=0x2 then for Kk=0X1,Jb do local Yk=(nil);for up=0,0X1 do if up~=0X0 then for DU,AU in ipairs(Z)do local nU=V[AU];local uU=(Yk[nU]);if uU==0X0 then local xA,ZA,FA=1,nil,nil;while(true)do if xA~=0X0 then do ZA=ob[Yk[AU]];end;xA=0;continue;else FA=Yb[ZA];break;end;end;if FA then Yk[nU]=FA[0X0001];local Sf=nil;local wf=(0X1);while wf~=2 do do if wf==0 then Sf[#Sf+tK]={Yk,nU};wf=0X2;continue;else Sf=FA[2];do wf=0;end;continue;end;end;end;end;elseif uU==15 then Yk[AU]=Kk+Yk[AU]+1;end;end;continue;else Yk=Mb[0x6][Kk];end;end;end;zb=1;else if zb~=0X3 then Jb=q()-57321;zb=0;continue;else(Mb)[2]=D();zb=2;continue;end;end;else if zb==0 then do for YR=0X01,Jb do Zb[YR]={[4]=true,[0X1]=0.35227489293942016,[5]=207769939,[7]=v(),[0X5]="",[0x001]=D(),[5]=N(),[2]=N(),[3]=N(),[0X6]=v(),[0X4]=v()};end;end;zb=0X3;continue;else Eb={};zb=0X5;end;end;end;zb=3;do while zb<0X04 do if not(zb<=1)then if zb==0x2 then(Mb)[5]=Eb;zb=0X1;continue;else Mb[4]=D();do zb=0;end;continue;end;else if zb==0 then(Mb)[16]=v();do zb=2;end;else for x1=0X001,D()do(Eb)[x1]={v(),D()};end;zb=0x4;continue;end;end;end;end;local db=Mb[1];zb=0;local Bb=nil;do while zb~=2 do if zb~=0x0 then for EC=0X0,Bb-1 do(db)[EC]=FK();end;do zb=0X002;end;else Bb=q()-67409;zb=0X1;continue;end;end;end;zb=1;local Lb=(nil);while(true)do if not(zb<=0)then if zb~=0X1 then Lb=q();do break;end;else(Mb)[0X000D]=v();do zb=0X0;end;end;else do Mb[8]=D();end;zb=0x02;do continue;end;end;end;zb=0x0;while(true)do if zb==0 then for xa=1,Lb do local Sa=q();local Oa=(q());local ta=q();for Mk=Sa,Oa do(Mb[3])[Mk]=ta;end;end;do zb=1;end;else return Mb;end;end;end;nK=0X4;do continue;end;end;end;local wK=FK();(EK)[0X00003]=fK;do fK=nil;end;do return PK(H,wK,nil)(...);end;end)(rawset,string.byte,nil,string.match,true,select,string.gsub,bit32.rshift,coroutine,string.unpack,12,0X001,193,false,string.rep,pcall,bit32.lshift,256,206,bit32.bor,setfenv,0.24623600837206838,table.insert,unpack,"\060\0734",...);
